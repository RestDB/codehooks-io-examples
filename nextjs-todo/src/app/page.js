"use client"
import Head from "next/head";
import styles from "./styles/Home.module.css";
import { useEffect, useState } from "react";

export default function Home() {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);
  const [todo, setTodo] = useState("");
  const changeHandler = (event) => {
    setTodo(event.target.value);
  };

  const addTodo = (event) => {
    setLoading(true);
    event.preventDefault();
    fetch(`/api`, {
      method: "POST",
      body: JSON.stringify({todo})
    })
      .then((res) => res.json())
      .then((data) => {
        loadTodos();
      });
  };

  const removeTodo = (ID) => {
    setLoading(true);
    fetch(`/api`, {
      method: "DELETE",
      body: JSON.stringify({todoID: ID})      
    })
      .then((res) => res.json())
      .then((data) => {
        loadTodos();
      });
  };

  const loadTodos = () => {
    
    fetch("/api", {method: "GET"})
      .then((res) => res.json())
      .then((data) => {
        console.log("load todos", data);
        setData(data);
        setLoading(false);
      });
  };

  useEffect(() => {
    console.log("effect");
    setLoading(true);
    loadTodos();
  }, []);

  if (!data) return "Loading...";
  return (
    <div className={styles.container}>
      <Head>
        <title>TODO App with Next.js and Codehooks.io</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>
          <h1 className={styles.title}>
            TODO App with Next.js and Codehooks.io
            <br />
          </h1>
          {loading ? (
            <a href="#" className={styles.card}>
              <img src="/loader.gif" />
            </a>
          ) : (
            <form className={styles.cardForm} onSubmit={addTodo}>
              <input
                className={styles.cardInput}
                type="text"
                name="todo"
                onChange={changeHandler}
                placeholder="Enter your exciting TODO item!"
              />
            </form>
          )}

          {data.map((item) => (
            <a key={item._id} href="#" onClick={() => removeTodo(item._id)} className={styles.card}>
              <p>{item.message}</p>
            </a>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
          <a href="https://codehooks.io">Example app by Codehooks.io</a>
      </footer>
    </div>
  );
}
